name: Skia Android Build Matrix

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/android-build.yml"
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [android]
        build_type: [debug, release]
        library_type: [static, dynamic]
        architecture: [arm, arm64, x86, x64]

    runs-on: ubuntu-latest

    env:
      ENV_PLATFORM: ${{ matrix.platform }}
      ENV_BUILD_TYPE: ${{ matrix.build_type }}
      ENV_LIBRARY_TYPE: ${{ matrix.library_type }}
      ENV_ARCHITECTURE: ${{ matrix.architecture }}
      ENV_BUILD_DIR: skia/out/build

    name: ${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.library_type }}-${{ matrix.architecture }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache depot_tools
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/depot_tools
          key: depot_tools-${{ matrix.platform }}-${{ hashFiles('scripts/install-deps-*') }}

      - name: Install dependencies for ${{ matrix.platform }}
        if: matrix.platform != 'windows'
        shell: bash
        run: |
          chmod +x ./scripts/install-deps-${{ matrix.platform }}.sh
          ./scripts/install-deps-${{ matrix.platform }}.sh

      - name: Install dependencies for ${{ matrix.platform }}
        if: matrix.platform == 'windows'
        shell: pwsh
        run: ./scripts/install-deps-windows.ps1

      - name: Setup depot_tools
        shell: bash
        run: |
          if [ ! -d "$GITHUB_WORKSPACE/depot_tools" ]; then
            git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
            # Optional: pin a known revision
            # cd depot_tools
            # git checkout <known-good-sha>
            # cd ..
          fi
          echo "DEPOT_TOOLS=$GITHUB_WORKSPACE/depot_tools" >> $GITHUB_ENV
          echo "PATH=$GITHUB_WORKSPACE/depot_tools:$PATH" >> $GITHUB_ENV

      - name: Clean build output
        shell: bash
        run: rm -rf "$ENV_BUILD_DIR"

      - name: Build Skia ${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.library_type }}-${{ matrix.architecture }}
        shell: bash
        run: |
          chmod +x ./scripts/build-skia.sh
          ./scripts/build-skia.sh

      - name: Zip built binaries
        shell: bash
        run: |
          zip_name="skia-${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.library_type }}-${{ matrix.architecture }}.zip"
          if [ -d "$ENV_BUILD_DIR" ]; then
            echo "Zipping contents of $ENV_BUILD_DIR into $zip_name"
            zip -r "$zip_name" "$ENV_BUILD_DIR"
          else
            echo "‚ùå Directory $ENV_BUILD_DIR does not exist. Skipping zip."
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: skia-${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.library_type }}-${{ matrix.architecture }}
          path: "./skia-${{ matrix.platform }}-${{ matrix.build_type }}-${{ matrix.library_type }}-${{ matrix.architecture }}.zip"

  release:
    runs-on: ubuntu-latest
    needs: build
    # if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Automated release by GitHub Actions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
